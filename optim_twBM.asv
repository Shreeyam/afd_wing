function [twopt,fval,exitflag,output] = optim_twBM(tw0,SFBMout,spanwise_steps,Sw,t,b,afpoly)
% Function optimizes tw [mm] that can withstand bending moment
% Yuri Shimane, 2020/02/25

% declare global variables for speed
twLast = [];
fvalLast = [];
cLast = [];

% objective function, nested below
objf = @objfun;
% constraint function, nested below
cfun = @nlcon;
% lower and upper bounds
lb = 1 * ones(3,1);    % set min skin thickness [mm]
ub = 10^3 * ones(3,1); % set max skin thickness [mm]

% call fmincon
[twopt,fval,exitflag,output] = fmincon(objf,t0,[],[],[],[],lb,ub,cfun,opts);


% NESTED FUNCTIONS
    function fval = objfun()
        % discretize wing
        yloc = linspace(0,b/2,spanwise_steps);
        for i = 1:spanwise_steps-1
            % chord length at given spanwise location
            c_y(1,i) = c(yloc(1,i), Sw, t, b/2);   % [m]

            % compute front spar height (at fspar location)
            h_w(1,i) = sparheight_calc(afpoly,c_y(1,i),fspar) * 10^3; % [mm]

            % compute Iyy
            Iyy(1,i) = wingIyy(100,20,h_w(1,i),tw); % [mm^4]

        end
        % return th
    end

end
